# Generated by Django 4.2.8 on 2024-01-04 14:10

import core.manager
import datetime
from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Reception',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(max_length=11, primary_key=True, serialize=False, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', core.manager.ReceptionManager()),
            ],
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('details', models.CharField(max_length=2047)),
            ],
        ),
        migrations.CreateModel(
            name='Dossier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birth_date', models.CharField(default=datetime.date.today)),
                ('job', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('first_apt', models.CharField(default=datetime.date.today)),
                ('marital_status', models.PositiveSmallIntegerField(choices=[(1, 'مجرد'), (2, 'نامزد'), (3, 'عقد'), (4, 'متأهل'), (5, 'ازدواج موقت'), (6, 'تعدد زوجات'), (7, 'ازدواج مجدد'), (8, 'متارکه'), (9, 'مطلقه'), (10, 'بیوه')])),
                ('educational_status', models.PositiveSmallIntegerField(choices=[(1, '(سنین بالا)بی سواد'), (2, 'زیر سن مدرسه'), (3, 'پیش دبستانی'), (5, 'ابتدایی(دانش آموز)'), (6, '(دانش آموز)راهنمایی'), (7, '(دانش آموز)دبیرستان'), (8, 'ابتدایی(ترک تحصیل)'), (9, 'راهنمایی(ترک تحصیل)'), (10, 'دبیرستان(ترک تحصیل)'), (11, 'دیپلم و پیش دانشگاهی'), (12, 'دارای مدرک دانشگاهی'), (13, 'دانشجو'), (14, 'حوزوی')])),
            ],
        ),
        migrations.CreateModel(
            name='Insurance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f_name', models.CharField(max_length=255)),
                ('l_name', models.CharField(max_length=255)),
                ('phone_number', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Psychologist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f_name', models.CharField(max_length=255)),
                ('l_name', models.CharField(max_length=255)),
                ('phone_number', models.CharField(max_length=11)),
                ('specialty_field', models.CharField(max_length=255)),
                ('detail', models.TextField(blank=True, max_length=2047, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='media/image')),
                ('photo_logo', models.ImageField(blank=True, null=True, upload_to='media/image')),
                ('receptionist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Treatment_Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('goal', models.CharField(max_length=100)),
                ('dossier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.dossier')),
                ('psychologist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.psychologist')),
            ],
        ),
        migrations.CreateModel(
            name='Profit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=100)),
                ('date', models.CharField(default=datetime.date.today)),
                ('psychologist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.psychologist')),
            ],
        ),
        migrations.CreateModel(
            name='patient_insurance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insurance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.insurance')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.patient')),
            ],
        ),
        migrations.CreateModel(
            name='patient_conditions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conditions', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.condition')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medication_name', models.CharField(max_length=100)),
                ('dosage', models.CharField(max_length=63)),
                ('frequency', models.CharField(max_length=255)),
                ('start_time', models.CharField(default=datetime.datetime.now, max_length=255)),
                ('end_time', models.CharField(max_length=255)),
                ('interventions', models.CharField(max_length=100)),
                ('dossier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.dossier')),
            ],
        ),
        migrations.AddField(
            model_name='insurance',
            name='patient',
            field=models.ManyToManyField(through='core.patient_insurance', to='core.patient'),
        ),
        migrations.AddField(
            model_name='dossier',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.patient'),
        ),
        migrations.AddField(
            model_name='dossier',
            name='psychologist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.psychologist'),
        ),
        migrations.AddField(
            model_name='condition',
            name='patient',
            field=models.ManyToManyField(through='core.patient_conditions', to='core.patient'),
        ),
        migrations.AlterUniqueTogether(
            name='dossier',
            unique_together={('patient', 'psychologist')},
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.CharField(default=datetime.date.today)),
                ('start_time', models.CharField(choices=[('3:00 PM', '3:00 PM-4:00 PM'), ('4:00 PM', '4:00 PM-5:00 PM'), ('5:00 PM', '5:00 PM-6:00 PM'), ('6:00 PM', '6:00 PM-7:00 PM'), ('7:00 PM', '7:00 PM-8:00 PM')], default='3 PM', max_length=10)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.patient')),
                ('psychologist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.psychologist')),
            ],
            options={
                'unique_together': {('psychologist', 'patient', 'date', 'start_time')},
            },
        ),
    ]
